(in-package #:python-cffi.test)

(addtest (burgled-batteries)
  numeric-test
  (quickcheck
    (let ((*size* (1- (expt 2 31))))
      (for-all ((v an-integer))
        #-python3(is= v (python.cffi:int.from-long v))
        #+python3(is= v (python.cffi:long.from-long v))
        (is= v (burgled-batteries:run (format nil "~d" v))))
      (for-all ((v a-boolean))
        (is= v (python.cffi:bool.from-long (if v 1 0)))
        (is= v (burgled-batteries:run (if v "True" "False"))))
      (for-all ((v an-integer))
        (is= v (python.cffi:long.from-long v))
        (is= v (burgled-batteries:run (format nil "~d" v)))))
    (let ((*size* (/ most-positive-single-float 2)))
      (for-all ((v a-real))
        (let ((v (coerce v 'double-float)))
          (is= v (python.cffi:float.from-double v))
          (is= v (burgled-batteries:run (format nil "~f" v))))))))
